https://www.codepile.net/pile/RenobZ8k

Napisz procedurę, która dla zadanej liczby n > 0, nie większej niż maxn, wypisze jej wszystkie rozkłady na sumy liczb naturalnych większych od zera ustawionych w kolejności nierosnącej.
Np. dla n = 3:
3 = 3
3 = 2+1
3 = 1+1+1

7 = 4 + wypisz(3,4)
        3 
        2+1
        1+1+1
        
        
10 = 10
10 = 9 + 1 
10 = 8 + wypisz(2,8)

10 = 5 + wypisz(5,5) = 
         4 + wypisz (3,4) 

10 = 2 + wypisz(8,2) = 
10 = 1 + wypisz(9,1)

//rozklad(223) = wypisz(223,223)5

void rozklad(int n) {

    int r[maxn + 1];
    r[0] = n;
    wypisz(n, n, r, 1);
}

void wypisz(int co, int maxSkl, int r[], int ind) {
// co to liczba do rozłożenia
// maxSkł 
// w r jest zapisany prefiks rozkładu - potrzebne do wypisywania
// ind - pierwszy wolny indeks
// ind-1 >=0
    if (co == 0) {
        printf("%d =", r[0]);
        for (int i = 1; i < ind-1; i++) {
            printf(" %d +", r[i]);
        }
        printf(" %d\n", r[ind-1]);
    } else {
        for (int i = min(co, maxSkl); i > 0; i--) {
           r[ind] = i;
           wypisz(co-i, i, r, ind + 1);
        }
    }
    
    
}

Zad. Dana jest tablica A liczb całkowitych rosnąca rozmiaru n>0. Sprawdź czy istnieje i, takie że A[i]=i.


ind 0  1  2  3  4
A   -5 0  1  3  10 



int wartosc(int A[], int n){
    int l=0, p=n-1; sr;
    bool czy_jest=false;
    
    while(l<=p)&&(czy_jest!=true) {
        
        sr = (l+p)/2;
        if(sr<A[sr]) {
            p=sr-1;
        }
        else if(sr==A[sr]) {
            czy_jest=true;
        }
        else {
            l=sr+1;
        }
    }   

    return czy_jest;
}Jestem
    

Zad. Tablice liczb całkowitych A rosnąca, B malejąca, obie rozmiaru n >0. Znaleźć indeks i, taki że |A[i]-B[i]| minimalna.



A = 1 4 7 9 
B = 8 7 6 3 

wykres |A[i]-B[i]| to kształt litery V, w takiej tablicy szukamy minimum
wykres  A[i]-B[i] to funkcja rosnąca, w niej szukamy zera


Zad 1. Języki typu a^n b^k c^m takie, że n,k,m spełniają jakieś
   równania/nierówności liniowe np
   n+k=m
   n+m=k
   n+m=k+1
   n+m<>k
   n+2m=k+2
   
Zad 2. słowa nad alfabetem {a,b},  gdzie żadne słowo nie jest postaci a^nb^na^n 










